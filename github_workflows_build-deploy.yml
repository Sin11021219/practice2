//Github Acions のワークフローの作成
.github/workflows/terraform.yamlを作成
$ mkdir .github && mkdir  .github/workflows && touch  .github/workflows/build-deploy.yml


name: "Build and Deploy"


on: 
   push:
     brantces:
       -main
 
 env:
   OIDC_ARN: arn:aws:iam::XXXXXXXXXXXX:role/GitHubAtionsOIDC
   ECR_REGISTRY: XXXXXXXXXXXX.dkr.ecr.ap-northeast-1.amazonaws.com
   ECR_REPOSITORY: go-simple-server
   APP: go-simple-server

 permissions:
   id-token: write
   contents: read

 jobs:
   build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      -name: Checkout
       uses: actions/checkout@v3

      -name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

      -uses: actions/cache@v2
      with:
          path: /tmp/.buildx-cache
          key: $ {{runner.os}}-buildx-${{github.sha}}
          restote-keys: |
            ${{ runner.os}}-buildx-     
      
      -name: Assume Role
       uses: aws-action/Configure-aws-credentials@v1-node16
       with:
            role-to-assume: ${{ env.OIDC_ARN }}
            aws-region: ap-northeast-1

      -name: Login to ECR
       uses: docker/login-acion@v1
       with:
            registry: $ {{ env.ECR_REGISTRY }}

      -name: Build and push
       uses: docker/login-acion@v3
       wiith: 
          push:true
          tag: |
           ${{ env.ECR_REGISTRY }}/${{ env.ECR_REGISTRY }}
       cache-from: type = local, src = /tmp/.buildx-cache
         cache-to: type = local, dest = /tmp/.buildx-cache = new, mode = max

      -name: Move cache
         run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      -name: Fill in the new image ID in the amazon ECS task definitions
         id: task-def
         uses: aws-actions/amazon-ecs-render-task-definition@v1
         with: 
           task-definitions: ./aws/task-definition-json
           container-name: ${{ env.APP }}
           image: $ {{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITRY }}:${{ github.sha }}

      -name: Deploy Amazon ECS task definitions
       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
       with:
            task-definition: $ {{ steps.task-def.outputs.task-definition }}
                    service: $ {{ env.APP }}
                    cluster: $ {{ env.APP }}
                    wait-for-service-stability: true


//GitHubにPush
$ git add. && git commit -m "build CI/CD pipeline with GitHub Actions" 
$ git push origin main 